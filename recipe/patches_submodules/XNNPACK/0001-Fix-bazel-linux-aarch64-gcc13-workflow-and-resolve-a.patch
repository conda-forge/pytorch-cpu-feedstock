From 50fbfa98c8a25411993c2423a4c2fabe5023fc56 Mon Sep 17 00:00:00 2001
From: XNNPACK Team <xnnpack-github-robot@google.com>
Date: Mon, 25 Nov 2024 13:00:56 -0800
Subject: [PATCH] Fix `bazel-linux-aarch64-gcc13` workflow and resolve
 accompanying build errors.

Note that task names should not be prefixes of another task since this messes up retrieving the correct cache for each task.

PiperOrigin-RevId: 700075031

[Cherry-pick note: dropped changes in .github/workflows/build.yml]
---
 src/reference/unary-elementwise.cc | 10 ++++++++++
 src/xnnpack/simd/s16-neon.h        |  2 +-
 2 files changed, 11 insertions(+), 1 deletion(-)

diff --git a/third_party/XNNPACK/src/reference/unary-elementwise.cc b/third_party/XNNPACK/src/reference/unary-elementwise.cc
index bd95ded6c..da892d8be 100644
--- a/third_party/XNNPACK/src/reference/unary-elementwise.cc
+++ b/third_party/XNNPACK/src/reference/unary-elementwise.cc
@@ -127,6 +127,16 @@ struct ConvertOp {
   }
 };
 
+#ifdef XNN_HAVE_FLOAT16
+template <>
+struct ConvertOp<xnn_bfloat16, _Float16> {
+  explicit ConvertOp(const xnn_unary_uparams*) {}
+  _Float16 operator()(xnn_bfloat16 x) const {
+    return static_cast<_Float16>(static_cast<float>(x));
+  }
+};
+#endif
+
 template <typename TIn, typename TOut>
 const xnn_unary_elementwise_config* get_convert_config(
     std::true_type /*input_quantized*/, std::true_type /*output_quantized*/) {
diff --git a/third_party/XNNPACK/src/xnnpack/simd/s16-neon.h b/third_party/XNNPACK/src/xnnpack/simd/s16-neon.h
index 4e8ebcfbd..e8392f4e9 100644
--- a/third_party/XNNPACK/src/xnnpack/simd/s16-neon.h
+++ b/third_party/XNNPACK/src/xnnpack/simd/s16-neon.h
@@ -70,7 +70,7 @@ static XNN_INLINE void xnn_store_tail_s16(int16_t* output, xnn_simd_s16_t v,
     v_low = vget_high_s16(v);
   }
   if (num_elements & 2) {
-    vst1_lane_s32((void*) output, vreinterpret_s32_s16(v_low), 0);
+    vst1_lane_s32((int32_t*) output, vreinterpret_s32_s16(v_low), 0);
     output += 2;
     v_low = vext_s16(v_low, v_low, 2);
   }
